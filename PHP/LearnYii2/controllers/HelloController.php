<?php
/**
 * Created by PhpStorm.
 * User: ios
 * Date: 2016/9/28
 * Time: 下午2:23
 */
namespace app\controllers;

use Yii;
use yii\base\ActionFilter;
use yii\db\ActiveRecord;
use yii\web\Controller;
use yii\base\Component;
use yii\base\Behavior;

class HelloController extends Controller
{
    public function actionIndex(){
        Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;
        $myClass = new MyClass();
        $myBehavior = new MyBehavior();
        $myClass->attachBehavior('myBehavior',$myBehavior);

        return [
            'message' => [
                $myClass->property1,
                $myClass->method1(),
            ],
            'code' => 100,
        ];
    }
}

class MyClass extends Component
{

}

class MyBehavior extends Behavior
{
    public $property1 = 'This is property in MyBehavior.';
    public $pror1;

    private $_prop2;
    private $_prop3;
    private $_prop4;

    public function getProp2()
    {
        return $this->_prop2;
    }

    public function setProp3($value)
    {
        $this->_prop3 = $value;
    }

    public function foo()
    {

    }

    public function bar()
    {

    }

    public function method1()
    {
        return 'Method in MyBehavior is called.';
    }

    public function events()
    {
        return [
            ActiveRecord::EVENT_BEFORE_VALIDATE => 'beforeValidate',
        ];
    }

    public function beforeValidate($event)
    {

    }
}

class ActionTimeFilter extends ActionFilter
{
    private $_startTime;

    public function beforeAction($action)
    {
        $this->_startTime = microtime(true);
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function afterAction($action, $result)
    {
        $time = microtime(true) - $this->_startTime;
        Yii::trace("Action '{$action->uniqueId}' spent $time second.");
        return parent::afterAction($action, $result); // TODO: Change the autogenerated stub
    }
}

